{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "..\\src\\Collection.svelte",
    "..\\src\\SelectorControls.svelte",
    "..\\src\\Hero.svelte",
    "..\\src\\Header.svelte",
    "..\\src\\Image.svelte",
    "..\\src\\InfoPage.svelte",
    "..\\src\\CollectionEditor.svelte",
    "..\\src\\ImageEditor.svelte",
    "..\\src\\SelectorButton.svelte",
    "..\\src\\SearchField.svelte",
    "..\\src\\LoginDialog.svelte"
  ],
  "sourcesContent": [
    "<script>\r\n  import { afterUpdate, onMount, tick } from \"svelte\";\r\n  import { getCollection, loggedIn } from \"./api.js\";\r\n  import { currentView, go } from \"./navigation.js\";\r\n  import { get } from \"svelte/store\";\r\n  import { onDestroy } from \"svelte\";\r\n  import marked from \"marked\";\r\n\r\n  let description = \"\";\r\n  let offset = 0;\r\n  let images = [];\r\n  let collection = \"home\";\r\n  let collectionThumb = false;\r\n  let selectedImages = new Set();\r\n  let IMAGE_URL = \"//dev.himalayanacademy.com/hamsa-images\";\r\n\r\n  const selectImage = checksum => {\r\n    selectedImages.add(checksum);\r\n  };\r\n\r\n  const unselectImage = checksum => {\r\n    selectedImages.delete(checksum);\r\n  };\r\n\r\n  const refreshCollection = data => {\r\n    let opts = {};\r\n    images = [];\r\n    collectionThumb = false;\r\n    description = \"\";\r\n\r\n    if (!data) {\r\n      return false;\r\n    }\r\n\r\n    opts = { limit: 50, offset };\r\n\r\n    if (data.collection && data.collection !== \"home\") {\r\n      let keyword = `Collection ${data.collection}`;\r\n      opts.keyword = keyword;\r\n      collection = data.collection;\r\n      getDescription(keyword);\r\n      document.title = `HAMSA - collection: ${keyword}`;\r\n    }\r\n\r\n    if (data.keyword) {\r\n      opts.keyword = data.keyword;\r\n      collection = data.keyword;\r\n      getDescription(data.keyword);\r\n      document.title = `HAMSA - tag: ${data.keyword}`;\r\n    }\r\n\r\n    if (data.artist) {\r\n      opts.artist = data.artist;\r\n      collection = data.artist;\r\n      getDescription(data.artist);\r\n      getCollectionThumb(data.artist);\r\n      document.title = `HAMSA - Artist: ${data.artist}`;\r\n    }\r\n\r\n    if (data.query) {\r\n      opts.query = data.query;\r\n      collection = data.query;\r\n      document.title = `HAMSA - Search: ${data.query}`;\r\n    }\r\n\r\n    console.dir(\"getting collection\", opts);\r\n    getCollection(opts).then(data => {\r\n      images = data.images;\r\n    });\r\n  };\r\n\r\n  const getDescription = k => {\r\n    let key = k\r\n      .toLowerCase()\r\n      .replace(/\\s+/g, \"-\")\r\n      .replace(/\\./g, \"\");\r\n    let url = `//dev.himalayanacademy.com/hamsa-images/_texts/${key}.txt`;\r\n\r\n    description = \"\";\r\n\r\n    // fetch(url)\r\n    //   .then(r => {\r\n    //     console.log(\"collection\", r)\r\n    //     if (r.status !== 200) {\r\n    //       throw \"\";\r\n    //     } else {\r\n    //       return r.text();\r\n    //     }\r\n    //   })\r\n    //   .then(d => (description = marked(d)))\r\n    //   .catch(e => {\r\n    //     description = \"\";\r\n    //   });\r\n  };\r\n\r\n  const getCollectionThumb = k => {\r\n    let key = k\r\n      .toLowerCase()\r\n      .replace(/\\s+/g, \"-\")\r\n      .replace(/\\./g, \"\");\r\n    collectionThumb = `//dev.himalayanacademy.com/hamsa-images/_artists/${key}.jpg`;\r\n  };\r\n\r\n  const thumbnailToURL = t => {\r\n    let i = t.replace(\"/images/\", \"\");\r\n    return `${IMAGE_URL}/${i}`;\r\n  };\r\n\r\n  const unsub = currentView.subscribe(i => {\r\n    if (i.view == \"Collection\") {\r\n      console.dir(\"view changed\", i);\r\n      refreshCollection(i.data);\r\n    }\r\n  });\r\n\r\n  onDestroy(() => unsub());\r\n</script>\r\n\r\n<style>\r\n  .no-collection {\r\n    text-align: center;\r\n    font-size: 1.6em;\r\n    color: #a76b73;\r\n  }\r\n\r\n  .collection-header {\r\n    text-align: center;\r\n  }\r\n\r\n  .collection-title {\r\n    color: #a76b73;\r\n    border-bottom: solid 1px #919191;\r\n    padding-bottom: 10px;\r\n    display: inline-block;\r\n  }\r\n\r\n  .collection-inner {\r\n    text-align: center;\r\n    font-family: sans-serif;\r\n    display: flex;\r\n    flex-direction: column;\r\n  }\r\n\r\n  .collection-description {\r\n    color: #333;\r\n    text-align: left;\r\n    padding-left: 15px;\r\n  }\r\n\r\n  .collection-metadata {\r\n    display: flex;\r\n    margin-bottom: 30px;\r\n    margin: auto;\r\n    width: 90%;\r\n    justify-content: center;\r\n  }\r\n\r\n  .collection-metadata > img {\r\n    max-width: 300px;\r\n    height: auto;\r\n    margin: 10px;\r\n  }\r\n\r\n  .g {\r\n    /* Masonry container */\r\n    column-count: 3;\r\n    column-gap: 1em;\r\n  }\r\n\r\n  .gi {\r\n    /* Masonry bricks or child elements */\r\n    display: inline-block;\r\n    margin: 0 0 0.5em;\r\n    width: 100%;\r\n  }\r\n\r\n  .gi figure:hover {\r\n    cursor: pointer;\r\n  }\r\n\r\n  .gi figure img {\r\n    max-width: 100%;\r\n  }\r\n\r\n  .hidden {\r\n    display: none;\r\n  }\r\n\r\n  .editor-trigger {\r\n    color: darkblue;\r\n    font-size: 12px;\r\n    cursor: pointer;\r\n  }\r\n\r\n  .checkbox {\r\n    display: inline-flex;\r\n    cursor: pointer;\r\n    position: relative;\r\n  }\r\n\r\n  .checkbox > span {\r\n    color: #34495e;\r\n    padding: 0.5rem 0.25rem;\r\n  }\r\n\r\n  .checkbox > input {\r\n    height: 25px;\r\n    width: 25px;\r\n    -webkit-appearance: none;\r\n    -moz-appearance: none;\r\n    -o-appearance: none;\r\n    appearance: none;\r\n    border: 1px solid #34495e;\r\n    border-radius: 4px;\r\n    outline: none;\r\n    transition-duration: 0.3s;\r\n    background-color: #41b883;\r\n    cursor: pointer;\r\n  }\r\n\r\n  .checkbox > input:checked {\r\n    border: 1px solid #41b883;\r\n    background-color: #34495e;\r\n  }\r\n\r\n  .checkbox > input:checked + span::before {\r\n    content: \"\\2713\";\r\n    display: block;\r\n    text-align: center;\r\n    color: #41b883;\r\n    position: absolute;\r\n    left: 0.5rem;\r\n    top: 0.1rem;\r\n  }\r\n\r\n  .checkbox > input:active {\r\n    border: 2px solid #34495e;\r\n  }\r\n</style>\r\n\r\n<div>\r\n  {#if images.length == 0}\r\n    <div class=\"loading-wrapper\">\r\n      <i class=\"fa fa-spinner fa-spin fa-3x\" />\r\n    </div>\r\n  {:else}\r\n    {#if collection !== 'home'}\r\n      <div class=\"collection-header\">\r\n        <h3 class=\"collection-title\">\r\n          {collection}\r\n          {#if $loggedIn}\r\n            <span\r\n              class=\"editor-trigger\"\r\n              on:click={() => {\r\n                go('CollectionEditor', { images: [...selectedImages] });\r\n              }}>\r\n              (Edit Selected Images)\r\n            </span>\r\n          {/if}\r\n        </h3>\r\n        <div class=\"collection-metadata\">\r\n          {#if collectionThumb}\r\n            <img\r\n              src={collectionThumb}\r\n              on:error={() => (collectionThumb = false)}\r\n              class:hidden={!collectionThumb}\r\n              alt=\"photo: {collection}\" />\r\n          {/if}\r\n          <p class=\"collection-description\">\r\n            {@html description}\r\n          </p>\r\n        </div>\r\n      </div>\r\n    {:else if $loggedIn}\r\n      <div class=\"collection-header\">\r\n        <h3 class=\"collection-title\">\r\n          <span\r\n            class=\"editor-trigger\"\r\n            on:click={() => {\r\n              go('CollectionEditor', { images: [...selectedImages] });\r\n            }}>\r\n            (Edit Selected Images)\r\n          </span>\r\n        </h3>\r\n      </div>\r\n    {/if}\r\n\r\n    <div class=\"collection\">\r\n      <div class=\"collection-inner\" />\r\n      <section class=\"g\">\r\n        {#each images as item}\r\n          <div class=\"gi\">\r\n            {#if $loggedIn}\r\n              <label class=\"checkbox\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  on:click|stopPropagation={ev => {\r\n                    if (ev.target.checked) {\r\n                      selectImage(item.checksum);\r\n                    } else {\r\n                      unselectImage(item.checksum);\r\n                    }\r\n                    console.log(selectedImages);\r\n                  }} />\r\n                <span />\r\n              </label>\r\n            {/if}\r\n            <figure on:click={() => go('Image', { checksum: item.checksum })}>\r\n              <img src={thumbnailToURL(item.thumbnail)} alt=\"\" />\r\n            </figure>\r\n          </div>\r\n        {:else}\r\n          <p class=\"no-collection\">\r\n            Sorry but we couldn't find images related to {collection}.\r\n          </p>\r\n        {/each}\r\n      </section>\r\n    </div>\r\n  {/if}\r\n</div>\r\n",
    "<script>\r\n    import SelectorButton from \"./SelectorButton.svelte\";\r\n    import SearchField from \"./SearchField.svelte\";\r\n    import {getSelectors} from \"./api.js\";\r\n    import {onMount} from \"svelte\";\r\n    import {go} from \"./navigation.js\";\r\n\r\n    let artistsList = [];\r\n    let collectionList = [];\r\n    let keywordList = [];\r\n\r\n    onMount(async () => {\r\n        let selectors = await getSelectors();\r\n        artistsList = selectors.artists.sort();\r\n        collectionList  = selectors.collections.sort();\r\n        keywordList = selectors.keywords.sort();\r\n\r\n        console.log(\"selectors data\", selectors)\r\n\r\n\r\n    })\r\n\r\n    const goInfo = () => {\r\n        go(\"InfoPage\");\r\n    }\r\n</script>\r\n<style>\r\n    .selector-controls {\r\n        display: flex;\r\n        padding: 12px;\r\n        flex-direction: row;\r\n        align-items: center;\r\n        justify-content: space-evenly;\r\n        position: relative;\r\n        background-color: #783441;\r\n    }\r\n\r\n    .bolotinha {\r\n        border-radius: 50%;\r\n        background-color: #D8B36C;\r\n        color: #783441;\r\n        padding: 10px;\r\n        font-size: 1.3em;\r\n        font-weight: 600;\r\n        display: flex;\r\n        font-family: sans-serif;\r\n        width: 40px;\r\n        height: 40px;\r\n        justify-content: center;\r\n        align-items: center;\r\n        cursor: pointer;\r\n    }\r\n</style>\r\n\r\n<div class=\"selector-controls\">\r\n    <div class=\"bolotinha\" on:click={goInfo}><span>i</span></div>\r\n    <SelectorButton title=\"Tags\" key=\"keyword\" items={keywordList} />\r\n    <SelectorButton title=\"Artists\" key=\"artist\" items={artistsList} />\r\n    <SelectorButton title=\"Collections\" key=\"collection\" items={collectionList} />\r\n    <SearchField />\r\n</div>",
    "<style>\r\n  .hero {\r\n    position: relative;\r\n    height: 370px;\r\n    max-height: 370px;\r\n    overflow: hidden;\r\n  }\r\n\r\n  .hero1 {\r\n    position: absolute;\r\n    left: 0px;\r\n    background-color: #000;\r\n    overflow: hidden;\r\n    width: 100%;\r\n    height: 370px;\r\n    max-width: 100%;\r\n    background-image: url(images/hero2.jpg);\r\n    background-size: fill;\r\n    background-repeat: no-repeat;\r\n    background-position: center;\r\n  }\r\n\r\n  .hero2 {\r\n    position: absolute;\r\n    left: 0px;\r\n    background-color: #005aa0;\r\n    overflow: hidden;\r\n    width: 100%;\r\n    max-width: 100%;\r\n    height: 370px;\r\n    background-size: fill;\r\n    background-repeat: no-repeat;\r\n    background-position: center;\r\n    background-image: url(images/hero1.jpg);\r\n  }\r\n</style>\r\n\r\n<div>\r\n  <div class=\"hero\">\r\n    <figure class=\"hero1\" />\r\n    <figure class=\"hero2\" />\r\n  </div>\r\n</div>\r\n",
    "<script>\r\nimport LoginDialog from \"./LoginDialog.svelte\";\r\nimport {  loggedIn } from \"./api.js\";\r\n\r\nlet dialogOpen = false;\r\nlet email = false;\r\n\r\n</script>\r\n\r\n<style>\r\n  .logo {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    vertical-align: middle;\r\n    color: rgb(255, 255, 255);\r\n    text-decoration: none;\r\n    z-index: 999;\r\n  }\r\n\r\n  .monastery-logo {\r\n    margin-right: 120px;\r\n    z-index: 9999;\r\n    height: 100px;\r\n  }\r\n\r\n  .monastery-logo img {\r\n    max-width: 100%;\r\n  }\r\n\r\n  .aum-glyph {\r\n    display: flex;\r\n    justify-content: space-around;\r\n    align-items: center;\r\n    color: #f4f3f1;\r\n    font-size: 0.9rem;\r\n    height: 100%;\r\n    flex: 1 1 auto;\r\n  }\r\n\r\n  .aum-glyph span {\r\n    padding: 5px;\r\n  }\r\n</style>\r\n\r\n<div>\r\n  <header>\r\n    <a href=\"/hamsa\" class=\"logo\">\r\n      <img\r\n        src=\"images/hamsa-logo-opt.jpg\"\r\n        alt=\"HAMSA logo\"\r\n        class=\"hamsa-logo\" />\r\n    </a>\r\n    <div class=\"monastery-header-text\">\r\n      <h1 class=\"title\">Himalayan Academy</h1>\r\n      <h2 class=\"subtitle\">Museum of Spiritual Arts</h2>\r\n      <div style=\"flex: auto\" />\r\n    </div>\r\n    <a href=\"/\" class=\"monastery-logo\">\r\n      <img\r\n        class=\"monastery-logo\"\r\n        src=\"images/monastery-logo.png\"\r\n        alt=\"Monastery Logo\" />\r\n    </a>\r\n    <div\r\n      on:click={() => {\r\n        dialogOpen = !dialogOpen;\r\n      }}\r\n      class=\"aum-glyph\">\r\n      {#if !$loggedIn}\r\n      <span>ॐ</span>\r\n      {:else}\r\n      <span>{sessionStorage.getItem(\"email\")}</span>\r\n      {/if}\r\n      {#if dialogOpen}\r\n      <LoginDialog \r\n      on:loggedIn={(ev) => {\r\n          console.log(\"received logged in event\")\r\n          dialogOpen = false;\r\n          email = ev.detail;\r\n      }}\r\n      on:loggedOut={(ev) => {\r\n          console.log(\"received log out event\")\r\n          dialogOpen = false;\r\n          email = false;\r\n      }}></LoginDialog>\r\n      {/if}\r\n    </div>\r\n  </header>\r\n</div>\r\n",
    "<script>\r\n  import { getImage } from \"./api.js\";\r\n  import { currentView, go } from \"./navigation.js\";\r\n  import { onDestroy } from \"svelte\";\r\n\r\n  export let checksum;\r\n\r\n  let image = {};\r\n  let loading = true;\r\n  let IMAGE_URL = \"//dev.himalayanacademy.com/hamsa-images\";\r\n\r\n  const refreshImage = data => {\r\n    let checksum = data.checksum;\r\n    loading = true;\r\n    getImage({ checksum }).then(res => {\r\n      image = res.image;\r\n      loading = false;\r\n    });\r\n  };\r\n\r\n  const toFilename = path => {\r\n    return \"image.jpg\";\r\n  };\r\n\r\n  const toImageURL = url => {\r\n    let i = url\r\n      .replace(\"/images/\", \"\")\r\n      .replace(\"/home/devhap/public_html/hamsa-images\", \"\");\r\n    return `${IMAGE_URL}/${i}`;\r\n  };\r\n\r\n  const toThumbnail = checksum => {\r\n    return `${IMAGE_URL}/_cache/${checksum}.thumb.jpg`;\r\n  };\r\n\r\n  const unsub = currentView.subscribe(i => {\r\n    console.dir(\"view changed\", i);\r\n    if (i.view == \"Image\") {\r\n      refreshImage(i.data);\r\n    }\r\n  });\r\n\r\n  onDestroy(() => unsub());\r\n</script>\r\n\r\n<style>\r\n  .image-view-container {\r\n    margin: auto;\r\n    width: 100%;\r\n  }\r\n\r\n  .single-image-wrapper {\r\n    padding: 15px;\r\n  }\r\n\r\n  .single-image-link {\r\n    border-bottom: solid 1px #b7872b;\r\n    text-decoration: none;\r\n    color: #fff;\r\n    background-color: #649800;\r\n    border-radius: 8px;\r\n    margin-left: 3px;\r\n    margin-right: 3px;\r\n    padding: 5px;\r\n    font-size: 12px;\r\n  }\r\n\r\n  .description {\r\n    font-family: sans-serif;\r\n    font-size: 20px;\r\n    color: #333333;\r\n  }\r\n\r\n  .tag {\r\n    cursor: pointer;\r\n    background-color: #f1f6fffc;\r\n    border-radius: 8px;\r\n    border: 1px solid #9a9a9a;\r\n    margin: 3px;\r\n    padding: 5px;\r\n    display: inline-block;\r\n    color: #444;\r\n    font-size: 12px;\r\n  }\r\n\r\n  .more-images {\r\n    cursor: pointer;\r\n  }\r\n\r\n  .author {\r\n    cursor: pointer;\r\n  }\r\n\r\n  .aum-glyph {\r\n    display: block;\r\n    float: right;\r\n    color: black;\r\n  }\r\n\r\n  .aum-glyph:hover {\r\n    cursor: pointer;\r\n  }\r\n</style>\r\n\r\n{#if loading}\r\n  <div class=\"loading-wrapper\">\r\n    <i class=\"fa fa-spinner fa-spin fa-3x\" />\r\n  </div>\r\n{:else}\r\n  <div class=\"image-view-container\">\r\n    <div class=\"single-image-wrapper\">\r\n      <div class=\"single-image\">\r\n        <img src={toImageURL(image.medpath)} alt={image.metadata.description} />\r\n        <a\r\n          href={toImageURL(image.path)}\r\n          target=\"_blank\"\r\n          download={toFilename(image.path)}\r\n          class=\"single-image-link\">\r\n          Download this image\r\n        </a>\r\n        <p class=\"description\">{image.metadata.description}</p>\r\n      </div>\r\n      <div class=\"metadata\">\r\n        <div\r\n          class=\"author\"\r\n          on:click={() => go('Collection', { artist: image.metadata.artist })}>\r\n          <i class=\"far fa-user fa-lg\" />\r\n          <h2>{image.metadata.artist}</h2>\r\n        </div>\r\n        <div class=\"dotted\" />\r\n        <div class=\"tags\">\r\n          <h2>Tags</h2>\r\n          {#each image.metadata.keywords as tag}\r\n            <span\r\n              class=\"tag\"\r\n              on:click={() => go('Collection', { keyword: tag })}>\r\n              {tag}\r\n            </span>\r\n          {/each}\r\n        </div>\r\n        <div class=\"dotted\" />\r\n        <h3>More by the same artist</h3>\r\n        {#each image.metadata.more as more}\r\n          <img\r\n            src={toThumbnail(more)}\r\n            on:click={() => go('Image', { checksum: more })}\r\n            alt=\"more\"\r\n            class=\"more-images\" />\r\n        {/each}\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div on:click={() => {\r\n    console.log(\"checksum\", image.checksum)\r\n    go('ImageEditor', {checksum: image.checksum})\r\n    }\r\n   } class=\"aum-glyph\">\r\n    <span>ॐ</span>\r\n  </div>\r\n{/if}\r\n",
    "<style>\r\n    .info {\r\n        width: 90%;\r\n        margin: auto;\r\n    }\r\n\r\n    .back-button {\r\n        border-bottom: 1px solid #b7872b;\r\n        text-decoration: none;\r\n        color: #FFF;\r\n        background-color: #649800;\r\n        border-radius: 8px;\r\n        margin-left: 3px;\r\n        margin-right: 3px;\r\n        padding: 5px;\r\n        font-size: 1.1em;\r\n    }\r\n</style>\r\n\r\n<div class=\"info info-blurb\">\r\n    <div><h1 id=\"welcome-to-hamsa\">Welcome to HAMSA</h1>\r\n        <p>Indian spiritual art has no equal in the world, either in scope or sheer quantity. For five decades the monks\r\n            at Kauai’s Hindu Monastery in Hawaii have been commissioning and collecting original works of art for our\r\n            many publications, apps and web projects. Among the thousands of images you will find rare masterpieces,\r\n            educational depictions of Hindu culture, legend, deities and philosophy, sacred religious symbols,\r\n            illustrated alphabets, children’s stories and decorative borders. For decades this treasure trove was hidden\r\n            in the binary recesses of our server (even we could barely find things). Now the entire collection is\r\n            available to you through the Himalayan Academy Museum of Spiritual Art. In Sanskrit hamsa is the word for\r\n            the Indian Goose (Anser indicus) or a swan, and represents the Ultimate Reality and the spiritually pure\r\n            soul. The flight of the hamsa symbolizes moksha, the release from the cycle of samsara.</p>\r\n        <p>You can search by key word, artist or collection. The download button will save the highest available\r\n            resolution file to your computer. You may use these images freely in service to dharma. However, if your use\r\n            is commercial, you must get written permission from the copyright holder, Himalayan Academy, by writing to:\r\n            <a href=\"mailto:contact@hindu.org\">contact@hindu.org</a>.</p>\r\n    </div>\r\n    <button class=\"back-button\" on:click={() => history.back()}>Go back</button>\r\n</div>",
    "<script>\r\n  import {\r\n    getImage,\r\n    login,\r\n    addImageTag,\r\n    removeImageTag,\r\n    getSelectors,\r\n    setImageDescription,\r\n    getImagesForCollectionEditor\r\n  } from \"./api.js\";\r\n  import { currentView, go } from \"./navigation.js\";\r\n  import { onDestroy } from \"svelte\";\r\n\r\n  let loadingImages = true;\r\n  let addingTag = false;\r\n  let collections;\r\n  let tags;\r\n  let newTag = \"\";\r\n  let images = [];\r\n  let IMAGE_URL = \"//dev.himalayanacademy.com/hamsa-images\";\r\n  let email;\r\n  let password;\r\n\r\n  const savedCredentials = () => {\r\n    if (\r\n      sessionStorage.getItem(\"email\") !== null &&\r\n      sessionStorage.getItem(\"password\") !== null\r\n    ) {\r\n      email = sessionStorage.getItem(\"email\");\r\n      password = sessionStorage.getItem(\"password\");\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const updateCollection = (ev, collection, i) => {\r\n    if (ev.target.checked) {\r\n      newTag = collection;\r\n    } \r\n    console.log()\r\n  };\r\n\r\n  const addCollection = () => {\r\n    if (newTag.length <= 2) {\r\n      alert(\"Can't add collections that short.\");\r\n      return false;\r\n    }\r\n\r\n    addingTag = true;\r\n    newTag = `Collection ${newTag}`;\r\n\r\n    let res = images.map(i => addImageTag(email, password, i.checksum, newTag));\r\n\r\n    Promise.all(res)\r\n      .then(res2 => {\r\n        console.log(res2)\r\n        console.log(\"images old\", images)\r\n        images = res2.map(r => r.addImageTag)\r\n        console.log(\"images new\", images)\r\n\r\n        let snip = images.map(i=> `&images=${i.checksum}`).join(\"\")\r\n\r\n        history.replaceState(\r\n            { images },\r\n            `Editing Images: ${images}`,\r\n            `${location.pathname}?view=CollectionEditor${snip}`\r\n          );\r\n\r\n        getSelectors().then(selectors => {\r\n          tags = selectors.keywords;\r\n          collections = selectors.collections;\r\n          addingTag = false;\r\n        });\r\n\r\n        newTag = \"\";\r\n      })\r\n      .catch(n => {\r\n        console.error(n);\r\n        error = n.map(e => e.message).join(`. `);\r\n        addingTag = false;\r\n      });\r\n  };\r\n\r\n  const thumbnailToURL = t => {\r\n    let i = t.replace(\"/images/\", \"\");\r\n    return `${IMAGE_URL}/${i}`;\r\n  };\r\n\r\n  const unsub = currentView.subscribe(i => {\r\n    console.dir(\"view changed\", i);\r\n    if (i.view == \"CollectionEditor\") {\r\n      getSelectors().then(selectors => {\r\n        tags = selectors.keywords;\r\n        collections = selectors.collections;\r\n        images = i.data.images;\r\n        console.log(images);\r\n        getImagesForCollectionEditor(images).then(r => {\r\n          console.log(\"result\", r);\r\n          images = images.map((c, i) => {\r\n            return r[`i${i}`];\r\n          });\r\n          console.log(\"images\", images);\r\n          loadingImages = false;\r\n        });\r\n      });\r\n    }\r\n  });\r\n\r\n  savedCredentials();\r\n\r\n  onDestroy(() => unsub());\r\n</script>\r\n\r\n<style>\r\n  .images {\r\n    background-color: #d8b36c;\r\n    max-width: 50%;\r\n  }\r\n  .images figure {\r\n    width: 100px;\r\n    display: inline-block;\r\n  }\r\n\r\n  img {\r\n    max-width: 100%;\r\n  }\r\n\r\n  .editor {\r\n    display: flex;\r\n  }\r\n\r\n  .controls {\r\n    padding: 25px;\r\n  }\r\n\r\n  .collection-header {\r\n    text-align: center;\r\n  }\r\n\r\n  .collection-title {\r\n    color: #a76b73;\r\n    border-bottom: solid 1px #919191;\r\n    padding-bottom: 10px;\r\n    display: inline-block;\r\n  }\r\n\r\n  p.error {\r\n    color: red;\r\n  }\r\n\r\n  .collection-label {\r\n    display: inline-block;\r\n  }\r\n</style>\r\n\r\n{#if loadingImages}\r\n  <div class=\"loading-wrapper\">\r\n    <i class=\"fa fa-spinner fa-spin fa-3x\" />\r\n  </div>\r\n{:else}\r\n  <div class=\"editor\">\r\n    <div class=\"images\">\r\n      {#each images as image}\r\n        {#if typeof image == 'string'}\r\n          <figure>\r\n            <i class=\"fa fa-spinner fa-spin\" />\r\n          </figure>\r\n        {:else}\r\n          <figure>\r\n            <img src={thumbnailToURL(image.thumbnail)} alt=\"\" />\r\n          </figure>\r\n        {/if}\r\n      {/each}\r\n    </div>\r\n    <div class=\"controls\">\r\n      {#if tags}\r\n        <div class=\"collection-header\">\r\n          <h3 class=\"collection-title\">Add new collection</h3>\r\n          <p>\r\n            The collections you add here will be added to the images appearing\r\n            on the left.\r\n          </p>\r\n        </div>\r\n        {#if addingTag}\r\n          <i class=\"fa fa-spinner fa-spin\" />\r\n        {:else}\r\n          <form on:submit|preventDefault={addCollection}>\r\n            <label for=\"newtag\">Add New Collection:</label>\r\n            <input type=\"text\" id=\"newtag\" bind:value={newTag} />\r\n            <input type=\"submit\" value=\"Assign collection\" />\r\n          </form>\r\n        {/if}\r\n      {/if}\r\n      {#if collections}\r\n        <div class=\"collection-header\">\r\n          <h3 class=\"collection-title\">Collections</h3>\r\n          <p>\r\n            All the collections you select here will be added to the images\r\n            appearing on the left.\r\n          </p>\r\n        </div>\r\n        {#each collections as collection, i}\r\n          <div>\r\n            <input\r\n              type=\"radio\"\r\n              name=\"collection\"\r\n              on:change={ev => updateCollection(ev, collection, i)}\r\n              id=\"collection-{i}\" />\r\n            <label class=\"collection-label\" for=\"collection-{i}\">\r\n              {collection}\r\n            </label>\r\n          </div>\r\n        {/each}\r\n        {#if addingTag}\r\n          <i class=\"fa fa-spinner fa-spin\" />\r\n        {:else}\r\n          <button on:click={addCollection}>\r\n            Assign the selected collections to the images on the left\r\n          </button>\r\n        {/if}\r\n      {/if}\r\n\r\n    </div>\r\n  </div>\r\n{/if}\r\n",
    "<script>\r\n  import {\r\n    getImage,\r\n    login,\r\n    addImageTag,\r\n    removeImageTag,\r\n    getSelectors,\r\n    setImageDescription,\r\n    setImageNotes\r\n  } from \"./api.js\";\r\n  import { currentView, go } from \"./navigation.js\";\r\n  import { onDestroy } from \"svelte\";\r\n\r\n  // problem with f3a129ffe45a292771e1e15e4c0ecd45\r\n  /*\r\n  check sum changes with editing, need to take that into account.\r\n  */\r\n\r\n  export let checksum;\r\n\r\n  let image = {};\r\n  let loading = true;\r\n  let addingTag = false;\r\n  let updatingText = false;\r\n  let IMAGE_URL = \"//dev.himalayanacademy.com/hamsa-images\";\r\n  let error = false;\r\n  let email;\r\n  let password;\r\n  let loggedIn = false;\r\n  let newTag;\r\n  let notes = \"\";\r\n  let description = \"\";\r\n\r\n  const savedCredentials = () => {\r\n    if (\r\n      sessionStorage.getItem(\"email\") !== null &&\r\n      sessionStorage.getItem(\"password\") !== null\r\n    ) {\r\n      email = sessionStorage.getItem(\"email\");\r\n      password = sessionStorage.getItem(\"password\");\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const refreshImage = data => {\r\n    checksum = data.checksum;\r\n    loading = true;\r\n    getImage({ checksum }).then(res => {\r\n      image = res.image;\r\n      activeCollections = collections.map(c =>\r\n        image.metadata.keywords.includes(`Collection ${c}`)\r\n      );\r\n      if (image.metadata.description.length > 0) {\r\n        description = image.metadata.description;\r\n      }\r\n\r\n      if (image.metadata.notes.length > 0) {\r\n        notes = image.metadata.notes;\r\n      }\r\n\r\n      loading = false;\r\n    });\r\n  };\r\n\r\n  const testAndSaveLogin = async () => {\r\n    if (await login(email, password)) {\r\n      console.log(`user ${email} logged in.`);\r\n      sessionStorage.setItem(\"email\", email);\r\n      sessionStorage.setItem(\"password\", password);\r\n      error = false;\r\n      loggedIn = true;\r\n    } else {\r\n      console.log(`Bad login credentials.`);\r\n      sessionStorage.removeItem(\"email\");\r\n      sessionStorage.removeItem(\"password\");\r\n      error = \"Not a valid user.\";\r\n      loggedIn = false;\r\n    }\r\n  };\r\n\r\n  const toFilename = path => {\r\n    return \"image.jpg\";\r\n  };\r\n\r\n  const toImageURL = url => {\r\n    let i = url\r\n      .replace(\"/images/\", \"\")\r\n      .replace(\"/home/devhap/public_html/hamsa-images\", \"\");\r\n    return `${IMAGE_URL}/${i}`;\r\n  };\r\n\r\n  const toThumbnail = checksum => {\r\n    return `${IMAGE_URL}/_cache/${checksum}.thumb.jpg`;\r\n  };\r\n\r\n  const updateCollection = (ev, c, i) => {\r\n    if (ev.target.checked) {\r\n      newTag = `Collection ${c}`;\r\n      addTag();\r\n    } else {\r\n      let tag = `Collection ${c}`;\r\n      deleteTag(tag);\r\n    }\r\n  };\r\n\r\n  const deleteTag = tag => {\r\n    if (confirm(`Do you want to remove tag: \"${tag}\" ?`)) {\r\n      console.log(\"remove tag\", tag);\r\n\r\n      addingTag = true;\r\n\r\n      let res = removeImageTag(email, password, checksum, tag)\r\n        .then(res => {\r\n          console.log(res);\r\n          image = res.removeImageTag;\r\n          checksum = image.checksum;\r\n          console.log(\"new checksum\", checksum);\r\n          addingTag = false;\r\n          history.replaceState(\r\n            { checksum },\r\n            `Editing Image: ${checksum}`,\r\n            `${location.pathname}?checksum=${checksum}&view=ImageEditor`\r\n          );\r\n        })\r\n        .catch(n => {\r\n          console.error(n);\r\n          error = n.map(e => e.message).join(`. `);\r\n          addingTag = false;\r\n        });\r\n    }\r\n  };\r\n\r\n  const addTag = () => {\r\n    if (newTag.length <= 2) {\r\n      alert(\"Can't add tags that short.\");\r\n      return false;\r\n    }\r\n\r\n    addingTag = true;\r\n\r\n    let res = addImageTag(email, password, checksum, newTag)\r\n      .then(res => {\r\n        console.log(res);\r\n        image = res.addImageTag;\r\n        checksum = image.checksum;\r\n        console.log(\"new checksum\", checksum);\r\n        addingTag = false;\r\n\r\n        if (newTag.indexOf(\"Collection\") !== -1) {\r\n          addingTag = true;\r\n          getSelectors().then(selectors => {\r\n            tags = selectors.keywords;\r\n            collections = selectors.collections;\r\n            refreshImage({ checksum });\r\n            addingTag = false;\r\n          });\r\n        }\r\n\r\n        newTag = \"\";\r\n        history.replaceState(\r\n          { checksum },\r\n          `Editing Image: ${checksum}`,\r\n          `${location.pathname}?checksum=${checksum}&view=ImageEditor`\r\n        );\r\n      })\r\n      .catch(n => {\r\n        console.error(n);\r\n        error = n.map(e => e.message).join(`. `);\r\n        addingTag = false;\r\n      });\r\n  };\r\n\r\n  const updateNotes = () => {\r\n    if (image.metadata.notes !== notes) {\r\n      updatingText = true;\r\n      if (notes === \"\") {\r\n        notes = \" \";\r\n        // notes can't be mutated to empty, it causes an error down in exiftool.\r\n      }\r\n      setImageNotes(email, password, checksum, notes)\r\n        .then(res => {\r\n          console.log(res);\r\n          image = res.setImageNotes;\r\n          checksum = image.checksum;\r\n          console.log(\"new checksum\", checksum);\r\n          updatingText = false;\r\n          history.replaceState(\r\n            { checksum },\r\n            `Editing Image: ${checksum}`,\r\n            `${location.pathname}?checksum=${checksum}&view=ImageEditor`\r\n          );\r\n        })\r\n        .catch(n => {\r\n          console.error(n);\r\n          error = n.map(e => e.message).join(`. `);\r\n          updatingText = false;\r\n        });\r\n    }\r\n  };\r\n\r\n  const updateDescription = () => {\r\n    if (image.metadata.description !== description) {\r\n      updatingText = true;\r\n      setImageDescription(email, password, checksum, description)\r\n        .then(res => {\r\n          console.log(res);\r\n          image = res.setImageDescription;\r\n          checksum = image.checksum;\r\n          console.log(\"new checksum\", checksum);\r\n          updatingText = false;\r\n          history.replaceState(\r\n            { checksum },\r\n            `Editing Image: ${checksum}`,\r\n            `${location.pathname}?checksum=${checksum}&view=ImageEditor`\r\n          );\r\n        })\r\n        .catch(n => {\r\n          console.error(n);\r\n          error = n.map(e => e.message).join(`. `);\r\n          updatingText = false;\r\n        });\r\n    }\r\n  };\r\n\r\n  loggedIn = savedCredentials();\r\n  let collections;\r\n  let activeCollections;\r\n  let tags;\r\n\r\n  const unsub = currentView.subscribe(i => {\r\n    console.dir(\"view changed\", i);\r\n    if (i.view == \"ImageEditor\") {\r\n      getSelectors().then(selectors => {\r\n        tags = selectors.keywords.sort();\r\n        collections = selectors.collections;\r\n        refreshImage(i.data);\r\n      });\r\n    }\r\n  });\r\n\r\n  onDestroy(() => unsub());\r\n</script>\r\n\r\n<style>\r\n  .image-view-container {\r\n    margin: auto;\r\n    width: 100%;\r\n  }\r\n\r\n  .single-image-wrapper {\r\n    padding: 15px;\r\n  }\r\n\r\n  .single-image-link {\r\n    border-bottom: solid 1px #b7872b;\r\n    text-decoration: none;\r\n    color: #fff;\r\n    background-color: #649800;\r\n    border-radius: 8px;\r\n    margin-left: 3px;\r\n    margin-right: 3px;\r\n    padding: 5px;\r\n    font-size: 12px;\r\n  }\r\n\r\n  .description,\r\n  .notes {\r\n    font-family: sans-serif;\r\n    font-size: 20px;\r\n    color: #333333;\r\n    display: block;\r\n    width: 100%;\r\n  }\r\n\r\n  .tag {\r\n    cursor: pointer;\r\n    background-color: #f1f6fffc;\r\n    border-radius: 8px;\r\n    border: 1px solid #9a9a9a;\r\n    margin: 3px;\r\n    padding: 5px;\r\n    display: inline-block;\r\n    color: #444;\r\n    font-size: 12px;\r\n  }\r\n\r\n  .more-images {\r\n    cursor: pointer;\r\n  }\r\n\r\n  .author {\r\n    cursor: pointer;\r\n  }\r\n\r\n  p.error {\r\n    color: red;\r\n  }\r\n\r\n  .collection-label {\r\n    display: inline-block;\r\n  }\r\n\r\n  .collection-header {\r\n    text-align: center;\r\n  }\r\n\r\n  .collection-title {\r\n    color: #a76b73;\r\n    border-bottom: solid 1px #919191;\r\n    padding-bottom: 10px;\r\n    display: inline-block;\r\n  }\r\n</style>\r\n\r\n<div class=\"collection-header\">\r\n  <h3 class=\"collection-title\">Image Editor</h3>\r\n</div>\r\n{#if error}\r\n  <p class=\"error\">{error}</p>\r\n{/if}\r\n{#if !loggedIn}\r\n  <p>Please log in.</p>\r\n  <form on:submit|preventDefault={testAndSaveLogin}>\r\n    <label for=\"email\">Email:</label>\r\n    <input type=\"text\" id=\"email\" bind:value={email} />\r\n    <label for=\"password\">Password:</label>\r\n    <input type=\"password\" id=\"password\" bind:value={password} />\r\n    <br />\r\n    <input type=\"submit\" value=\"log in\" />\r\n  </form>\r\n{:else if loading}\r\n  <div class=\"loading-wrapper\">\r\n    <i class=\"fa fa-spinner fa-spin fa-3x\" />\r\n  </div>\r\n{:else}\r\n  <div class=\"image-view-container\">\r\n    <div class=\"single-image-wrapper\">\r\n      <div class=\"single-image\">\r\n        <img src={toImageURL(image.medpath)} alt={image.metadata.description} />\r\n        {#if !updatingText}\r\n          <form>\r\n            <label for=\"description\">\r\n              Description\r\n              <i>\r\n                (IPTC:Caption-Abstract, EXIF:ImageDescription and\r\n                XMP:Description)\r\n              </i>\r\n            </label>\r\n            <textarea\r\n              rows=\"10\"\r\n              name=\"description\"\r\n              class=\"description\"\r\n              bind:value={description} />\r\n            <input type=\"button\" value=\"Save Description\" on:click={updateDescription} />\r\n            <label for=\"notes\">\r\n              About the image\r\n              <i>(IPTC:DocumentNotes)</i>\r\n            </label>\r\n            <textarea name=\"notes\" class=\"notes\" bind:value={notes} />\r\n            <input type=\"button\" value=\"Save Notes\" on:click={updateNotes} />\r\n          </form>\r\n        {:else}\r\n          <div class=\"loading-wrapper\">\r\n            <i class=\"fa fa-spinner fa-spin fa-3x\" />\r\n          </div>\r\n        {/if}\r\n      </div>\r\n      <div class=\"metadata\">\r\n        <div\r\n          class=\"author\"\r\n          on:click={() => go('Collection', { artist: image.metadata.artist })}>\r\n          <i class=\"far fa-user fa-lg\" />\r\n          <h2>{image.metadata.artist}</h2>\r\n        </div>\r\n        <div class=\"dotted\" />\r\n        <div class=\"tags\">\r\n          <h2>Tags</h2>\r\n          {#each image.metadata.keywords as tag}\r\n            <span\r\n              tooltip=\"click to delete\"\r\n              class=\"tag\"\r\n              on:click={() => deleteTag(tag)}>\r\n              {tag} | x\r\n            </span>\r\n          {/each}\r\n          <br />\r\n          <br />\r\n          {#if addingTag}\r\n            <div>\r\n              <i class=\"fa fa-spinner fa-spin\" />\r\n            </div>\r\n          {:else}\r\n            <form on:submit|preventDefault={addTag}>\r\n              <label for=\"newtag\">Add Tag:</label>\r\n              <select bind:value={newTag}>\r\n                {#each tags as tag}\r\n                  <option value={tag}>{tag}</option>\r\n                {/each}\r\n              </select>\r\n              <input type=\"submit\" value=\"Assign tag\" />\r\n              <h2>Collections</h2>\r\n              {#each collections as collection, i}\r\n                <div>\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    bind:checked={activeCollections[i]}\r\n                    on:change={ev => updateCollection(ev, collection, i)}\r\n                    name=\"collection-{i}\" />\r\n                  <label class=\"collection-label\" for=\"collection-{i}\">\r\n                    {collection}\r\n                  </label>\r\n                </div>\r\n              {/each}\r\n            </form>\r\n          {/if}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n{/if}\r\n",
    "<script>\r\n  import { go } from \"./navigation.js\";\r\n    export let title=\"untitled\";\r\n    export let items=[];\r\n    export let key=\"item\"\r\n\r\n    let open = false;\r\n\r\n    const onClick = (item) => {\r\n        console.log(\"clicked\", item)\r\n        let data = {};\r\n        data[key] = item;\r\n        go(\"Collection\", data)\r\n    }\r\n</script>\r\n\r\n<style>\r\n    .round-wrapper {\r\n        border-radius: 30px;\r\n        border: 1px solid;\r\n        display: inline-block;\r\n        padding: 10px;\r\n        width: 240px;\r\n        background-color: #d8b36c;\r\n        color: #783441;\r\n        font-weight: 600;\r\n        cursor: pointer;\r\n    }\r\n\r\n    .selector-text {\r\n        color: rgba(0, 0, 0, 0.54);\r\n    }\r\n\r\n    .selector-content {\r\n        display: none;\r\n        position: absolute;\r\n        border-radius: 4px;\r\n        box-shadow: 0 1px 2px rgba(0, 0, 0, 0.24);\r\n        padding: 4px 8px;\r\n        margin: 0;\r\n        width: 200px;\r\n        background-color: #FFFF;\r\n        font-family: sans-serif;\r\n        font-weight: 300;\r\n    }\r\n\r\n    .open {\r\n        display: block;\r\n        max-height: 400px;\r\n        overflow-y: scroll;\r\n        z-index: 9999;\r\n    }\r\n\r\n    .list-item {\r\n        display: block;\r\n        padding: 8px;\r\n        cursor: pointer;\r\n    }\r\n</style>\r\n\r\n<div class=\"round-wrapper is-selector-categories\" on:click={() => open = !open}>\r\n    <div class=\"selector-text\">\r\n        <span class=\"title\">{title}</span>\r\n        <i class=\"fa fa-caret-down\"></i>\r\n    </div>\r\n    <ul class=\"selector-content\" class:open>\r\n    {#each items as item}\r\n        <li class=\"list-item\" on:click={() => {onClick(item)}}>{item}</li>\r\n    {/each}\r\n    </ul>\r\n</div>",
    "<script>\r\n  import { go } from \"./navigation.js\";\r\n\r\n  let query;\r\n\r\n  function search(event) {\r\n    if (event.key === \"Enter\") {\r\n      console.log(\"search\", query);\r\n      go(\"Collection\", { query });\r\n    }\r\n  }\r\n</script>\r\n\r\n<style>\r\n  .round-wrapper {\r\n    border-radius: 30px;\r\n    border: 1px solid;\r\n    display: inline-block;\r\n    padding: 10px;\r\n    width: 240px;\r\n    background-color: #d8b36c;\r\n    color: #783441;\r\n    font-weight: 600;\r\n    cursor: pointer;\r\n  }\r\n\r\n  .round-wrapper input.search {\r\n    border: none;\r\n    padding-left: 8px;\r\n    font-family: sans-serif;\r\n    background: none;\r\n    font-weight: 600;\r\n    color: #783441;\r\n    padding: 0;\r\n    margin: 0;\r\n  }\r\n</style>\r\n\r\n<div class=\"round-wrapper is-search-box\">\r\n  <input class=\"search\" placeholder=\"Search\" bind:value={query} on:keydown={search} />\r\n  <i class=\"fa fa-search\" />\r\n</div>\r\n",
    "<script>\n  import { login, loggedIn } from \"./api.js\";\n  import { createEventDispatcher } from 'svelte';\n\n\tconst dispatch = createEventDispatcher();\n\n  let email;\n  let password;\n  let error = false;\n\n  const savedCredentials = () => {\n    if (\n      sessionStorage.getItem(\"email\") !== null &&\n      sessionStorage.getItem(\"password\") !== null\n    ) {\n      email = sessionStorage.getItem(\"email\");\n      password = sessionStorage.getItem(\"password\");\n      return true;\n    } else {\n      return false;\n    }\n  };\n\nconst logout = async () => {\n    sessionStorage.removeItem(\"email\");\n    sessionStorage.removeItem(\"password\");\n    $loggedIn = false;\n    dispatch('loggedOut');\n}\n\n  const testAndSaveLogin = async () => {\n    if (await login(email, password)) {\n      console.log(`user ${email} logged in.`);\n      sessionStorage.setItem(\"email\", email);\n      sessionStorage.setItem(\"password\", password);\n      error = false;\n      $loggedIn = true;\n      dispatch('loggedIn', email);\n    } else {\n      console.log(`Bad login credentials.`);\n      sessionStorage.removeItem(\"email\");\n      sessionStorage.removeItem(\"password\");\n      error = \"Not a valid user.\";\n      $loggedIn = false;\n    }\n  };\n\n  $loggedIn = savedCredentials();\n</script>\n\n<style>\n  .login-dialog-wrapper {\n    position: absolute;\n    top: 0px;\n    left: 0px;\n    height: 100vh;\n    width: 100vw;\n    background-color: rgba(0, 0, 0, 0.5);\n    z-index: 99999;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n\n  .login-dialog {\n    opacity: 1;\n    background-color: #f4f3f1;\n    width: 300px;\n    height: 300px;\n    display: flex;\n  }\n\n  .login-dialog form {\n    margin: auto;\n    color: black;\n    display: inline-block;\n  }\n\n  .error {\n      font-weight: bold;\n      color: darkred;\n  }\n</style>\n\n<div class=\"login-dialog-wrapper\">\n  <div class=\"login-dialog\" on:click|stopPropagation={()=>{}}>\n    <form on:submit|preventDefault={testAndSaveLogin}>\n      {#if !$loggedIn}\n      <h1>Login</h1>\n      {#if error}\n      <p class=\"error\">{error}\n      {/if}\n      <label for=\"email\">Email:</label>\n      <input type=\"text\" id=\"email\" bind:value={email} />\n      <label for=\"password\">Password:</label>\n      <input type=\"password\" id=\"password\" bind:value={password} />\n      <br />\n      <input type=\"submit\" value=\"log in\" />\n      {:else}\n            <button on:click={logout}>log out</button>\n      {/if}\n    </form>\n  </div>\n</div>\n"
  ],
  "names": [],
  "mappings": "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"
}